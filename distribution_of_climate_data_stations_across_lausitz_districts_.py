# -*- coding: utf-8 -*-
"""Distribution of Climate Data Stations Across Lausitz Districts".ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qhjx47bnj-deO9mH8Ks7roEYdzV2mZAh
"""

getwd()

install.packages("rdwd")

install.packages("tidyverse")

install.packages("sf")

install.packages("raster")

install.packages("berryFunctions")

library(rdwd)
library(tidyverse)
library(sf)
library(raster)
library(berryFunctions)

# Select daily climate data:
data("metaIndex") ; m <- metaIndex
m <- m[m$res=="daily" & m$var=="kl" & m$per=="recent" & m$hasfile, ]

# Transform into spatial object:
msf <- sf::st_as_sf(m, coords=c("geoLaenge", "geoBreite"), crs=4326)

# Read district shapefile, see link above:
lk <- sf::st_read("Lusatia_Administrative_Boundary_geom_info.shp", quiet=TRUE)

# intersections: list with msf rownumbers for each district:
lk = st_transform(lk, crs = st_crs(msf))
int <- sf::st_intersects(lk, msf)

# plot to check projection:
plot(lk[,"GEN"], reset=FALSE)
axis(1, line=-1); axis(2, line=-1, las=1)

# Cottbus
lk$GEN[[1]]
m[int[[1]], c("Stationsname", "geoLaenge", "geoBreite")]
points(m[int[[1]], c("geoLaenge", "geoBreite")], pch=16, col= "darkseagreen1", cex=1.8)

# Dahme-Spreewald
lk$GEN[[2]]
m[int[[2]], c("Stationsname", "geoLaenge", "geoBreite")]
points(m[int[[2]], c("geoLaenge", "geoBreite")], pch=16, col= "darkseagreen1", cex=1.8)

# Elbe-Elster
lk$GEN[[3]]
m[int[[3]], c("Stationsname", "geoLaenge", "geoBreite")]
points(m[int[[3]], c("geoLaenge", "geoBreite")], pch=16, col= "darkseagreen1", cex=1.8)

# Oberspreewald-Lausitz
lk$GEN[[4]]
m[int[[4]], c("Stationsname", "geoLaenge", "geoBreite")]
points(m[int[[4]], c("geoLaenge", "geoBreite")], pch=16, col= "darkseagreen1", cex=1.8)

# Spree-Nei?e
lk$GEN[[5]]
m[int[[5]], c("Stationsname", "geoLaenge", "geoBreite")]
points(m[int[[5]], c("geoLaenge", "geoBreite")], pch=16, col= "darkseagreen1", cex=1.8)

# Bautzen
lk$GEN[[6]]
m[int[[6]], c("Stationsname", "geoLaenge", "geoBreite")]
points(m[int[[6]], c("geoLaenge", "geoBreite")], pch=16, col= "darkseagreen1", cex=1.8)

# G?rlitz
lk$GEN[[7]]
m[int[[7]], c("Stationsname", "geoLaenge", "geoBreite")]
points(m[int[[7]], c("geoLaenge", "geoBreite")], pch=16, col= "darkseagreen1", cex=1.8)

# Lausitz
lausitz = c(int[[1]], int[[2]], int[[3]], int[[4]], int[[5]], int[[6]], int[[7]])
lausitz_stations = m[lausitz,]
head(lausitz_stations)
lausitz_stations$Stationsname